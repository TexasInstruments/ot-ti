#!/bin/bash
#
#  Copyright (c) 2023, Texase Instruments Incorporated
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euxo pipefail

readonly OT_SRCDIR="$(pwd)"
readonly OT_OPTIONS=(
    "-DOT_PLATFORM=external"
)

CMAKE=${CMAKE:-cmake}
GCC_ARMCOMPILER=${GCC_ARMCOMPILER:-/opt/gcc-arm-none-eabi-9-2020-q2-update}
TICLANG_ARMCOMPILER=${TICLANG_ARMCOMPILER:-""}
IAR_ARMCOMPILER=${IAR_ARMCOMPILER:-""}

main()
{
    # the SimpleLink SDK uses normal 'make' to re-build it's libraries
    make \
        -C third_party/ti_simplelink_sdk/repo_cc13xx_cc26xx \
        CMAKE=${CMAKE} \
        GCC_ARMCOMPILER=${GCC_ARMCOMPILER} \
        IAR_ARMCOMPILER=${IAR_ARMCOMPILER} \
        TICLANG_ARMCOMPILER=${TICLANG_ARMCOMPILER} \
        GENERATOR=Ninja

    mkdir "build"

    for launchpad in LP_CC2652R7 LP_EM_CC1354P10_1; do
        local builddir=$(realpath -m "build/${launchpad}")
        local outdir=$(realpath -m "output/${launchpad}")
        local ot_dir=$(realpath -m "openthread")
        local src_dir=$(realpath -m "src")

        mkdir -p "${outdir}/bin" "${outdir}/lib"

        # create Thread Test Harness reference version
        ${CMAKE} -GNinja -DOT_COMPILE_WARNING_AS_ERROR=ON \
            -DTI_SIMPLELINK_BOARD=${launchpad} \
            -DCMAKE_TOOLCHAIN_FILE=src/arm-none-eabi-m4f.cmake \
            -DOT_PLATFORM=external \
            -DOPENTHREAD_CONFIG_FILE=openthread-core-cc13xx_cc26xx-config-thci.h \
            -DOPENTHREAD_PROJECT_CORE_CONFIG_FILE=openthread-core-cc13xx_cc26xx-config-thci.h \
            "${OT_SRCDIR}" \
            -B ${builddir}
        ${CMAKE} --build ${builddir}

        cp ${builddir}/bin/ot-cli-ftd.out "${outdir}/bin/ot-cli-thci.out"
        cp ${builddir}/bin/ot-rcp.out "${outdir}/bin/ot-rcp-thci.out"

        cp ${builddir}/lib/libopenthread-cli-ftd.a "${outdir}/lib/libopenthread-cli-main.a"
        cp ${builddir}/lib/libtcplp-ftd.a "${outdir}/lib/libtcplp-main.a"
 
        # create Matter libraries
        ${CMAKE} -GNinja -DOT_COMPILE_WARNING_AS_ERROR=ON \
            -DTI_SIMPLELINK_BOARD=${launchpad} \
            -DCMAKE_TOOLCHAIN_FILE=src/arm-none-eabi-m4f.cmake \
            -DOT_PLATFORM=external \
            -DOPENTHREAD_CONFIG_FILE=openthread-core-cc13xx_cc26xx-config-matter.h \
            -DOPENTHREAD_PROJECT_CORE_CONFIG_FILE=openthread-core-cc13xx_cc26xx-config-matter.h \
            "${OT_SRCDIR}" \
            -B ${builddir}
        ${CMAKE} --build ${builddir}

        rsync -avm --include '*/' --include '*.h' --exclude '*' "${ot_dir}/include" "${outdir}"
        rsync -avm --include '*' "${builddir}/bin" "${outdir}"
        rsync -avm --include '*' "${builddir}/lib" "${outdir}"

        cp "${src_dir}/openthread-core-cc13xx_cc26xx-config-thci.h" "${outdir}/include/openthread-core-cc13xx_cc26xx-config-thci.h"
        cp "${src_dir}/openthread-core-cc13xx_cc26xx-config-matter.h" "${outdir}/include/openthread-core-cc13xx_cc26xx-config-matter.h"

    done
}

main "$@"
